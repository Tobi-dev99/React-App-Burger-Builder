{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","hoc/Auxiliary.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/Burger Builder/Burger Builder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","layout","className","classes","Content","BurgerIngrdient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Component","protoTypes","PropTypes","string","isRequired","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","buildControls","BuildControls","ctrl","ingredientAdded","ingredientRemoved","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","setState","removeIngredientHandler","oldCount","newCount","priceReduction","disabledInfo","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fd85ab1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__37oR0\",\"BreadTop\":\"BurgerIngredient_BreadTop__xDmNi\",\"Seeds1\":\"BurgerIngredient_Seeds1__v0HVK\",\"Seeds2\":\"BurgerIngredient_Seeds2__uHmE3\",\"Meat\":\"BurgerIngredient_Meat__3d3nw\",\"Cheese\":\"BurgerIngredient_Cheese__XI8uu\",\"Salad\":\"BurgerIngredient_Salad__1ZHYM\",\"Bacon\":\"BurgerIngredient_Bacon__1-PYG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3K3Ue\",\"Label\":\"BuildControl_Label__2SKNY\",\"Less\":\"BuildControl_Less__2zXZU\",\"More\":\"BuildControl_More__ClGiE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3_iep\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__RME5p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3y5Ik\"};","const aux = (props) => props.children;\r\n\r\nexport default aux; ","import React from \"react\";\r\nimport Aux from \"../../hoc/Auxiliary\";\r\nimport classes from './Layout.module.css';\r\n\r\nconst layout = (props) => {\r\n  return (\r\n    <Aux>\r\n      <div>Toolbar, SideDrawer, Backdrop</div>\r\n      <main className={classes.Content}>{props.children}</main>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default layout;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport classes from \"./BurgerIngredient.module.css\";\r\n\r\nclass BurgerIngrdient extends Component  {\r\n    render(){\r\n         let ingredient = null;\r\n\r\n         switch (this.props.type) {\r\n           case \"bread-bottom\":\r\n             ingredient = <div className={classes.BreadBottom}></div>;\r\n             break;\r\n           case \"bread-top\":\r\n             ingredient = (\r\n               <div className={classes.BreadTop}>\r\n                 <div className={classes.Seeds1}></div>\r\n                 <div className={classes.Seeds2}></div>\r\n               </div>\r\n             );\r\n             break;\r\n           case \"meat\":\r\n             ingredient = <div className={classes.Meat}></div>;\r\n             break;\r\n           case \"cheese\":\r\n             ingredient = <div className={classes.Cheese}></div>;\r\n             break;\r\n           case \"salad\":\r\n             ingredient = <div className={classes.Salad}></div>;\r\n             break;\r\n           case \"bacon\":\r\n             ingredient = <div className={classes.Bacon}></div>;\r\n             break;\r\n           default:\r\n             ingredient = null;\r\n             break;\r\n         }\r\n         return ingredient;\r\n    }\r\n \r\n};\r\n\r\nBurgerIngrdient.protoTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngrdient;\r\n","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngrdient from './BurgerIngredients/BurgerIngredient';\r\n\r\nconst burger = props => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i)=>\r\n             <BurgerIngrdient key={igKey +i} type={igKey}/>\r\n        ); \r\n    })\r\n    .reduce((arr, el)=>{\r\n      return arr.concat(el)\r\n    }, []);\r\n    if(transformedIngredients.length === 0){\r\n      transformedIngredients = <p>Please add ingredients.</p>\r\n    }\r\n    return (\r\n      <div className={classes.Burger}>\r\n        <BurgerIngrdient type=\"bread-top\" />\r\n        {transformedIngredients}\r\n        <BurgerIngrdient type=\"bread-bottom\" />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => {\r\n    return (\r\n      <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl';\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst buildControls = props => {\r\n   return (\r\n     <div className={classes.BuildControls}>\r\n       {controls.map((ctrl) => (\r\n         <BuildControl\r\n           key={ctrl.label}\r\n           label={ctrl.label}\r\n           added={() => props.ingredientAdded(ctrl.type)}\r\n           removed={()=>props.ingredientRemoved(ctrl.type)}\r\n           disabled={props.disabled[ctrl.type]}\r\n         />\r\n       ))}\r\n     </div>\r\n   );\r\n}\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\n\r\n\r\nconst INGREDIENT_PRICES =   {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component{\r\nstate = {\r\n    ingredients: {\r\n        salad: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0\r\n    },\r\n    totalPrice: 4\r\n}\r\n\r\naddIngredientHandler = (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n        ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n\r\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n}\r\n\r\nremoveIngredientHandler= (type) => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if(oldCount <= 0){\r\n        return;\r\n    }\r\n    const newCount = oldCount - 1;\r\n    const updatedIngredients = {...this.state.ingredients};\r\n    updatedIngredients[type] = newCount;\r\n    const priceReduction = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceReduction;\r\n\r\n    this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n}\r\n\r\n    render(){\r\n        const disabledInfo = {...this.state.ingredients};\r\n        for(let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        return (\r\n          <Aux>\r\n            <Burger ingredients={this.state.ingredients} />\r\n            <BuildControls \r\n            ingredientAdded={this.addIngredientHandler}\r\n            ingredientRemoved={this.removeIngredientHandler}\r\n            disabled={disabledInfo} />\r\n          </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/Burger Builder/Burger Builder';\n\nclass App extends Component {\n\n  render(){\n    return (\n      <div>\n        <Layout>\n          <BurgerBuilder />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}